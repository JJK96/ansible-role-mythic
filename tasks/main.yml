---
- name: Update apt
  apt:
    update_cache: yes

- name: Install Docker
  include_role:
    name: geerlingguy.docker

- name: Install Pip role and vars for pip
  include_role:
    name: geerlingguy.pip
  vars:
    pip_install_packages:
      - docker
      - botocore
      - boto3
      - requests
    pip_executable: pip3
    pip_package: python3-pip
 

- name: Install pydocker
  pip:
    name: docker

- name: Install golang
  include_role:
    name: gantsign.golang


- name: Download Mythic
  ansible.builtin.git:
    repo: "{{ mythic_repo }}"
    dest: "{{ installation_path }}"
    version: "{{ mythic_version }}"

- name: Make Go binaries
  command: sudo make
  args:
    chdir: "{{ installation_path }}"

  
- name: Check and move file if present
  stat:
    path: "{{ installation_path }}/mythic-cli"
  register: mythic_cli_stat

- name: Move file to /bin/ if it exists
  command: cp "{{ installation_path }}/mythic-cli" /bin/
  when: mythic_cli_stat.stat.exists

- name: Continue with other tasks 
  debug:
    msg: "File has been moved to /bin/, continuing with other tasks"
  when: mythic_cli_stat.stat.exists


- name: Check for mythic config
  stat:
    path: "{{ installation_path }}/.env"
  register: env_stat

- name: Create mythic config
  shell: ./mythic-cli config 
  args:
    chdir: "{{ installation_path }}"
  when: not env_stat.stat.exists

- name: Configure Mythic | Set variables
  lineinfile:
    path: "{{ installation_path }}/.env"
    regexp: "^{{ item.key }}"
    line: "{{ item.key }}={{ item.value }}"
  with_dict:
    SERVER_HEADER: "{{ server_header }}"
    MYTHIC_ADMIN_USER: "{{ admin_username }}"
    MYTHIC_ADMIN_PASSWORD: "{{ default_password }}"
    DEFAULT_OPERATION_NAME: "{{ operation_name }}"
  no_log: true

- name: Get Mythic container info
  docker_container_info:
    name: mythic_server
  register: mythic_result


- name: Install Agents
  include_tasks: install_agents.yml
  vars:
    agent: "{{ item }}"
  loop: "{{ agents }}"


- name: Start mythic 
  command: "./mythic-cli start"
  args:
    chdir: "{{ installation_path }}"
